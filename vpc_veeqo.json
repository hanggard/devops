{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description": "VPC, Subnets, IGW, VPN GW, Route Tables, Security Groups, Auto Scaling Array",

  "Parameters" : {

    "VpcName": {
      "Default": "Veeqo",
      "Description" : "VPC Name",
      "Type": "String"
    },

    "VpcCidrBlock": {
      "Default": "172.20.0.0/16",
      "Description" : "VPC CIDR Block",
      "Type": "String"
    },

    "AZs" : {
      "Type" : "CommaDelimitedList",
      "Default" : "us-east-1a, us-east-1b",
      "Description" : "The list of active AZ's"
    },

    "SubnetsPublic" : {
      "Type" : "CommaDelimitedList",
      "Default" : "172.20.0.0/24, 172.20.1.0/24",
      "Description" : "IP Ranges (CIDR) for Public Subnets"
    },

    "SubnetsAppPrivate" : {
      "Type" : "CommaDelimitedList",
      "Default" : "172.20.128.0/24, 172.20.129.0/24",
      "Description" : "IP Ranges (CIDR) for Application Private Subnets"
    },

    "SubnetsDbPrivate" : {
      "Type" : "CommaDelimitedList",
      "Default" : "172.20.130.0/24, 172.20.131.0/24",
      "Description" : "IP Ranges (CIDR) for DB Private Subnets"
    },

    "IntDomainName": {
      "Default": "veeqo.com",
      "Description" : "Internal Domain Name",
      "Type": "String"
    }
  },

  "Resources": {

    "Vpc" : {
      "Type" : "AWS::EC2::VPC",
      "Properties" : {
        "CidrBlock" : {"Ref" : "VpcCidrBlock"},
        "EnableDnsSupport" : "true",
        "EnableDnsHostnames" : "true",
        "InstanceTenancy" : "default",
        "Tags": [{"Key": "Name", "Value" : { "Ref" : "VpcName" }}]
      }
    },

    "DhcpOptions" : {
      "Type" : "AWS::EC2::DHCPOptions",
      "Properties" : {
       "DomainName" : { "Ref" : "IntDomainName" },
        "DomainNameServers" : [ "AmazonProvidedDNS" ],
        "Tags" : [ { "Key" : "Name", "Value" : "Custom DHCP Set" } ]
      }
    },

    "DhcpOptionsAssoc" : { 
      "Type" : "AWS::EC2::VPCDHCPOptionsAssociation",
      "Properties" : {
        "DhcpOptionsId" : { "Ref" : "DhcpOptions" },
        "VpcId" : { "Ref" : "Vpc" }
      }
    },

    "PublicSubnetA" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "Vpc" },
        "CidrBlock" : { "Fn::Select" : [ "0", {"Ref": "SubnetsPublic"} ] },
        "AvailabilityZone" : { "Fn::Select" : [ "0", {"Ref": "AZs"} ] },
        "Tags": [{"Key": "Name", "Value" : "PublicSubnetA"}]
      }
    },

    "PublicSubnetB" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "Vpc" },
        "CidrBlock" : { "Fn::Select" : [ "1", {"Ref": "SubnetsPublic"} ] },
        "AvailabilityZone" : { "Fn::Select" : [ "1", {"Ref": "AZs"} ] },
        "Tags": [{"Key": "Name", "Value" : "PublicSubnetB"}]
      }
    },

    "AppPrivateSubnetA" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "Vpc" },
        "CidrBlock" : { "Fn::Select" : [ "0", {"Ref": "SubnetsAppPrivate"} ] },
        "AvailabilityZone" : { "Fn::Select" : [ "0", {"Ref": "AZs"} ] },
        "Tags": [{"Key": "Name", "Value" : "AppPrivateSubnetA"}]
      }
    },

    "AppPrivateSubnetB" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "Vpc" },
        "CidrBlock" : { "Fn::Select" : [ "1", {"Ref": "SubnetsAppPrivate"} ] },
        "AvailabilityZone" : { "Fn::Select" : [ "1", {"Ref": "AZs"} ] },
        "Tags": [{"Key": "Name", "Value" : "AppPrivateSubnetB"}]
      }
    },

    "DbPrivateSubnetA" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "Vpc" },
        "CidrBlock" : { "Fn::Select" : [ "0", {"Ref": "SubnetsDbPrivate"} ] },
        "AvailabilityZone" : { "Fn::Select" : [ "0", {"Ref": "AZs"} ] },
        "Tags": [{"Key": "Name", "Value" : "DbPrivateSubnetA"}]
      }
    },

    "DbPrivateSubnetB" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "Vpc" },
        "CidrBlock" : { "Fn::Select" : [ "1", {"Ref": "SubnetsDbPrivate"} ] },
        "AvailabilityZone" : { "Fn::Select" : [ "1", {"Ref": "AZs"} ] },
        "Tags": [{"Key": "Name", "Value" : "DbPrivateSubnetB"}]
      }
    },

    "IGW" : {
      "Type" : "AWS::EC2::InternetGateway",
      "Properties" : {
        "Tags" : [ {"Key" : "Name", "Value" : "IGW"}]
      }
    },

    "AttachIGW" : {
      "Type" : "AWS::EC2::VPCGatewayAttachment",
      "Properties" : {
        "VpcId" : { "Ref" : "Vpc" },
        "InternetGatewayId" : { "Ref" : "IGW" }
      }
    },

    "PubRouteTable": {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "Vpc" },
        "Tags" : [ { "Key" : "Name", "Value" : "Public" } ]
      }
    },

    "PrivARouteTable": {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "Vpc" },
        "Tags" : [ { "Key" : "Name", "Value" : "Private A" } ]
      }
    },

    "PrivBRouteTable": {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "Vpc" },
        "Tags" : [ { "Key" : "Name", "Value" : "Private B" } ]
      }
    },

    "PubDefRoute" : {
      "Type" : "AWS::EC2::Route",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PubRouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "IGW" }
      }
    },

    "PrivADefRoute" : {
      "Type" : "AWS::EC2::Route",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivARouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "IGW" }
      }
    },

    "PrivBDefRoute" : {
      "Type" : "AWS::EC2::Route",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivBRouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "IGW" }
      }
    },

    "PublicSubnetARouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PubRouteTable" },
        "SubnetId" : { "Ref" : "PublicSubnetA" }
      }
    },

    "PublicSubnetBRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PubRouteTable" },
        "SubnetId" : { "Ref" : "PublicSubnetB" }
      }
    },

    "AppPrivateSubnetARouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivARouteTable" },
        "SubnetId" : { "Ref" : "AppPrivateSubnetA" }
      }
    },

    "AppPrivateSubnetBRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivBRouteTable" },
        "SubnetId" : { "Ref" : "AppPrivateSubnetB" }
      }
    },

    "DbPrivateSubnetARouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivARouteTable" },
        "SubnetId" : { "Ref" : "DbPrivateSubnetA" }
      }
    },

    "DbPrivateSubnetBRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivBRouteTable" },
        "SubnetId" : { "Ref" : "DbPrivateSubnetB" }
      }
    },
    
    "SshSG" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Security Group for Ssh",
        "VpcId" : {"Ref" : "Vpc"},
        "SecurityGroupIngress" : [
          { "IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : "0.0.0.0/0" }
        ],
        "SecurityGroupEgress" : [
          { "IpProtocol" : "-1", "FromPort" : "0", "ToPort" : "0", "CidrIp" : "0.0.0.0/0" }
        ],
        "Tags": [{"Key": "Name", "Value" : "Ssh-SG"}]
      }
    },

    "ElbSG" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Security Group for Elastic Load Balancer",
        "VpcId" : {"Ref" : "Vpc"},
        "SecurityGroupIngress" : [
            { "IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : "0.0.0.0/0" },
            { "IpProtocol" : "tcp", "FromPort" : "443", "ToPort" : "443", "CidrIp" : "0.0.0.0/0" }
        ],
        "SecurityGroupEgress" : [
            { "IpProtocol" : "-1",  "FromPort" : "0",  "ToPort" : "0",  "CidrIp" : "0.0.0.0/0" }
        ],
        "Tags": [{"Key": "Name", "Value" : "ELB-SG"}]
      }
    },

    "WorkerSG" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Security Group for Workers array",
        "VpcId" : {"Ref" : "Vpc"},
        "SecurityGroupEgress" : [
            { "IpProtocol" : "-1",  "FromPort" : "0",  "ToPort" : "0",  "CidrIp" : "0.0.0.0/0" }
        ],
        "Tags": [{"Key": "Name", "Value" : "Worker-SG"}]
      }
    },

    "WebSG" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Security Group for Ruby Web Servers array",
        "VpcId" : {"Ref" : "Vpc"},
        "SecurityGroupIngress" : [
            { "IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "SourceSecurityGroupId" :  { "Ref" : "ElbSG" }  }
        ],
        "SecurityGroupEgress" : [
            { "IpProtocol" : "-1",  "FromPort" : "0",  "ToPort" : "0",  "CidrIp" : "0.0.0.0/0" }
        ],
        "Tags": [{"Key": "Name", "Value" : "Web-SG"}]
      }
    },	
	
    "RedisSG" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Security Group for Redis Cache cluster",
        "VpcId" : {"Ref" : "Vpc"},
        "SecurityGroupIngress" : [
            { "IpProtocol" : "tcp", "FromPort" : "6379", "ToPort" : "6379", "SourceSecurityGroupId" :  { "Ref" : "WorkerSG" }  },
			{ "IpProtocol" : "tcp", "FromPort" : "6379", "ToPort" : "6379", "SourceSecurityGroupId" :  { "Ref" : "WebSG" }  }
        ],
        "SecurityGroupEgress" : [
            { "IpProtocol" : "-1",  "FromPort" : "0",  "ToPort" : "0",  "CidrIp" : "0.0.0.0/0" }
        ],
        "Tags": [{"Key": "Name", "Value" : "Redis-SG"}]
      }
    },	
	
    "RdsSG" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Security Group for Relative Database Service",
        "VpcId" : {"Ref" : "Vpc"},
        "SecurityGroupIngress" : [
            { "IpProtocol" : "tcp", "FromPort" : "5432", "ToPort" : "5432", "SourceSecurityGroupId" :  { "Ref" : "WorkerSG" } },
			{ "IpProtocol" : "tcp", "FromPort" : "5432", "ToPort" : "5432", "SourceSecurityGroupId" :  { "Ref" : "WebSG" } },
			{ "IpProtocol" : "tcp", "FromPort" : "5432", "ToPort" : "5432", "CidrIp" : "0.0.0.0/0" }
        ],
        "SecurityGroupEgress" : [
            { "IpProtocol" : "-1",  "FromPort" : "0",  "ToPort" : "0",  "CidrIp" : "0.0.0.0/0" }
        ],
        "Tags": [{"Key": "Name", "Value" : "RDS-SG"}]
      }
    },

    "DBSubnetGroup" : {
      "Type" : "AWS::RDS::DBSubnetGroup",
      "Properties" : {
        "DBSubnetGroupDescription" : "Veeqo DB Subnet group",
        "SubnetIds" : [{ "Ref" : "DbPrivateSubnetA" },
                       { "Ref" : "DbPrivateSubnetB" }],
        "Tags" : [ {"Key" : "Name", "Value" : "Veeqo"} ]
      }
    }
  },


  "Outputs": {

    "VpcId" : {
      "Value" : { "Ref" : "Vpc" },
      "Description" : "ID for VPC"
    },

    "SubnetsPublicIds" : {
      "Value" : { "Fn::Join" : [ ", ", [ { "Ref" : "PublicSubnetA" }, { "Ref" : "PublicSubnetB" } ] ] },
      "Description" : "IDs for subnets \"Public Subnet A\" and \"Public Subnet B\""
    },

    "SubnetsAppPrivateIds" : {
      "Value" : { "Fn::Join" : [ ", ", [ { "Ref" : "AppPrivateSubnetA" }, { "Ref" : "AppPrivateSubnetB" } ] ] },
      "Description" : "IDs for subnets \"Application Private Subnet A\" and \"Application Private Subnet B\""
    },

    "SubnetsDbPrivateIds" : {
      "Value" : { "Fn::Join" : [ ", ", [ { "Ref" : "DbPrivateSubnetA" }, { "Ref" : "DbPrivateSubnetB" } ] ] },
      "Description" : "IDs for subnets \"Database Private Subnet A\" and \"Database Private Subnet B\""
    },
	
	"DBSubnetGroup" : {
      "Value" : { "Ref" : "DBSubnetGroup" },
      "Description" : "ID for DB Subnet group"
    },

    "SshSG" : {
      "Value" : { "Ref" : "SshSG" },
      "Description" : "ID for security group \"Ssh-SG\""
    },
	
	"ElbSG" : {
      "Value" : { "Ref" : "ElbSG" },
      "Description" : "ID for security group \"Elb-SG\""
    },
	
	"WorkerSG" : {
      "Value" : { "Ref" : "WorkerSG" },
      "Description" : "ID for security group \"Worker-SG\""
    },
	
	"WebSG" : {
      "Value" : { "Ref" : "WebSG" },
      "Description" : "ID for security group \"Web-SG\""
    },
	"RedisSG" : {
      "Value" : { "Ref" : "RedisSG" },
      "Description" : "ID for security group \"Redis-SG\""
    },
	"RdsSG" : {
      "Value" : { "Ref" : "RdsSG" },
      "Description" : "ID for security group \"Rds-SG\""
    }	
  }
}
